name: CD (Beta 環境)

on:
  push:
    branches: [beta] # 只監聽 beta 分支
  workflow_dispatch: # 也可手動觸發

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 跑在測試機的 Runner
    # environment: beta             # 綁定 GitHub Environment，讀取機密

    steps:
      # 1. 取代碼
      - name: Checkout source
        uses: actions/checkout@v4

      # 2. 建置與推送映像
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:beta    # 永遠覆寫 beta tag

      # 3. 重新部署容器
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.TEST_EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e

            echo "👉 拉beta映像"
            sudo docker compose pull

            echo "👉 重啟服務（不中斷）"
            sudo docker compose up -d --remove-orphans

            echo "👉 清 24h 前殘餘映像"
            sudo docker system prune -f --filter "until=24h"

            echo "👉 重啟 cloudflared，讓新容器立即被代理"
            sudo systemctl restart cloudflared
